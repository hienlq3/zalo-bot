import fetch from "node-fetch";
import fs from "fs";
import dotenv from "dotenv";

dotenv.config({ path: ".env" });

// üîß H√†m l∆∞u token m·ªõi v√†o file .env
function updateEnvToken(key, value) {
    const envPath = ".env";
    let envContent = fs.readFileSync(envPath, "utf8");

    const regex = new RegExp(`^${key}=.*$`, "m");
    if (regex.test(envContent)) {
        envContent = envContent.replace(regex, `${key}=${value}`);
    } else {
        envContent += `\n${key}=${value}`;
    }

    fs.writeFileSync(envPath, envContent);
    process.env[key] = value; // c·∫≠p nh·∫≠t bi·∫øn m√¥i tr∆∞·ªùng hi·ªán t·∫°i
}

// üîÑ H√†m refresh token
async function refreshAccessToken() {
    console.log("üîÅ ƒêang l√†m m·ªõi Zalo Access Token...");

    const params = new URLSearchParams();
    params.append("app_id", process.env.ZALO_APP_ID);
    params.append("refresh_token", process.env.ZALO_REFRESH_TOKEN);
    params.append("grant_type", "refresh_token");

    const res = await fetch("https://oauth.zaloapp.com/v4/oa/access_token", {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded",
            "secret_key": process.env.ZALO_APP_SECRET,
        },
        body: params.toString(),
    });

    const data = await res.json();

    if (data.access_token) {
        console.log("‚úÖ L·∫•y access token m·ªõi th√†nh c√¥ng");
        updateEnvToken("ZALO_ACCESS_TOKEN", data.access_token);

        if (data.refresh_token) {
            console.log("üîÑ L∆∞u refresh token m·ªõi");
            updateEnvToken("ZALO_REFRESH_TOKEN", data.refresh_token);
        }

        return data.access_token;
    } else {
        throw new Error("‚ùå Refresh token th·∫•t b·∫°i: " + JSON.stringify(data));
    }
}

// üí¨ H√†m g·ª≠i tin nh·∫Øn
export async function sendZaloMessage(userId, text) {
    const url = process.env.ZALO_API_URL;
    let accessToken = process.env.ZALO_ACCESS_TOKEN;

    const data = {
        recipient: { user_id: userId },
        message: { text },
    };

    try {
        let res = await fetch(url, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                access_token: accessToken,
            },
            body: JSON.stringify(data),
        });

        let result = await res.json();

        // ‚ö†Ô∏è N·∫øu token h·∫øt h·∫°n (-216), t·ª± refresh v√† g·ª≠i l·∫°i
        if (result.error === -216) {
            console.warn("‚ö†Ô∏è Token h·∫øt h·∫°n, ƒëang refresh...");
            accessToken = await refreshAccessToken();

            res = await fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    access_token: accessToken,
                },
                body: JSON.stringify(data),
            });

            result = await res.json();
        }

        console.log("‚úÖ K·∫øt qu·∫£ g·ª≠i tin:", result);
        return result;

    } catch (err) {
        console.error("‚ùå L·ªói g·ª≠i tin nh·∫Øn Zalo:", err);
        throw err;
    }
}